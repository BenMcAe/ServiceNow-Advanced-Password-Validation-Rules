gs.include("PrototypeServer");

var ValidatePasswordExtraStronger = Class.create();
ValidatePasswordExtraStronger.prototype = {
    process: function() {
        var min_len = gs.getProperty('validatepasswordextrastronger.min_len');
        var min_complexity = gs.getProperty('validatepasswordextrastronger.min_complexity');
        
        var user_password = request.getParameter("user_password");
        var previous_user_password = request.getParameter("user_password_current");
        
        
        var error_msg = "";
        var complexity_count = 0;
	
	error_msg += gs.getMessage('validatepasswordextrastronger.password_invalid');
        error_msg += gs.getMessage('validatepasswordextrastronger.rules',min_len);
        error_msg += gs.getMessage('validatepasswordextrastronger.errors');
        
        if(user_password == previous_user_password){
            error_msg += gs.getMessage('validatepasswordextrastronger.equals_to_previous');
        }
        
        if (user_password.length() < min_len) {
            error_msg += gs.getMessage('validatepasswordextrastronger.too_short');
        }

        var digit_pattern = new RegExp("[0-9]", "g");
        if (!digit_pattern.test(user_password)) {
            error_msg += gs.getMessage('validatepasswordextrastronger.digit_missing');
        }else{
            complexity_count++;
        }

        var upper_pattern = new RegExp("[A-Z]", "g");
        if (!upper_pattern.test(user_password)) {
            error_msg += gs.getMessage('validatepasswordextrastronger.uppercase_missing');
            
        }else{
            complexity_count++;
        }

        var lower_pattern = new RegExp("[a-z]", "g");
        if (!lower_pattern.test(user_password)) {
            error_msg += gs.getMessage('validatepasswordextrastronger.lowercase_missing');
            
        }else{
            complexity_count++;
        }
        
        var special_pattern = new RegExp("[!@#\$%\^\&*\)\(+=._-]", "g");
        if (!special_pattern.test(user_password)) {
            error_msg += gs.getMessage('validatepasswordextrastronger.special_missing');
            
        }else{
            complexity_count++;
        }
        
        if(complexity_count >= min_complexity && user_password.length() >= min_len && user_password != previous_user_password){
            return true; // password is OK   
        }else{
            gs.addErrorMessage(error_msg);
            return false;
        }
  
    }
}
